{
  //* Syntax - JSON
  /* The syntax of JSON - JavaScript Object Notation is quite simple and follows a set of clear rules
to represent structured data in a human-readable and easily interpretable format
machines. Here is a description of the basic JSON syntax. */
  // 1. **JSON Objects:**
  /*
    - A JSON object is defined between curly braces `{}`.
    - Key-value pairs within the object are separated by commas.
    - Keys must be enclosed in double quotes.
    - Key-value pairs consist of a key, followed by a colon (`:`), and a value.
    - Objects can contain other nested objects.
*/
  // Example of a JSON object
  "name": "John",
  "age": 30,
  "city": "Example",
  // Example of a JSON array
  "array": [
    "apple",
    "banana",
    "orange"
  ]
  // 2. **JSON Arrays:**
  /*
  - A JSON array is defined between square brackets `[]`.
  - The elements within the array are separated by commas.
  - An array can contain any type of value, including other arrays and nested objects.
*/
  // 3. **Data Types:**
  // - JSON supports several data types:
  /* - Numbers (example: `42` or `3.14`).
    - Text strings (always enclosed in double quotes, example: `"Hello, world"`).
    - Booleans (`true` or `false`).
    - `null` (represents a null value).
    - Objects (defined between curly braces `{}`).
    - Fixes (defined in square brackets `[]`).
*/
  // 4. **Comments:**
  /* JSON does not support comments directly in its syntax. Comments should be handled outside of the
JSON structure, in the code that uses it. */
  // 5. **Blank Spaces:**
  /* Whitespace (spaces, tabs, line breaks) are ignored in JSON syntax,
except within text strings. Indent formatting is a common practice to improve the
readability. */
  // 6. **Capital and Lowercase:**
  /* JSON is case insensitive, meaning `true` and `True` are considered
equals. */
  // 7. **Escape Special Characters:**
  /* If you need to include special characters in a text string, such as double quotes or slashes
backslashes, you must escape them with a backslash (`\`). For example, `"string with \"quotes
doubles\""`. */
  /* JSON syntax is simple and easy to understand. It is important to ensure that the JSON data is
well trained and comply with the aforementioned rules so that they are processed correctly by the
applications that use it. Automatic formatting and validation tools can be useful for
verify and maintain correct syntax in JSON documents. */
}
